# CodePrism MCP Server - Core Navigation Tools Test Specification
# Comprehensive testing for core navigation and code analysis tools
# following the MCP 2025-06-18 specification

name: "CodePrism Core Navigation Tools"
version: "1.0.0"
description: "Test specification for CodePrism MCP server core navigation and analysis tools"

# Server capabilities declaration
capabilities:
  tools: true           # Core navigation tools
  resources: false      # No file URI resources  
  prompts: false        # No prompt templates
  sampling: false       # No sampling support
  logging: true         # Error and operation logging

# Server startup configuration  
server:
  command: "cargo"
  args: ["run", "--package", "codeprism-mcp-server", "--bin", "codeprism-mcp-server"]
  env:
    RUST_LOG: "info"
    MCP_PROTOCOL_VERSION: "2025-06-18"
  transport: "stdio"
  startup_timeout_seconds: 30
  shutdown_timeout_seconds: 10

# Core navigation tools testing
tools:
  # ========================================================================
  # REPOSITORY_STATS Tool - Repository analysis and statistics
  # ========================================================================
  - name: "repository_stats"
    description: "Analyze repository structure and generate comprehensive statistics"
    tests:
      - name: "analyze_python_project"
        description: "Generate repository statistics for Python test project"
        input:
          project_path: "test-projects/python-sample"
          include_hidden: false
          file_patterns: ["*.py"]
          include_complexity: true
          include_dependencies: true
        expected:
          error: false
          fields:
            - path: "$.result.total_files"
              field_type: "integer"
              required: true
            - path: "$.result.total_lines"
              field_type: "integer"
              required: true
            - path: "$.result.languages_detected"
              field_type: "array"
              required: true
            - path: "$.result.file_types"
              field_type: "object"
              required: true
        performance:
          max_duration_ms: 5000
          max_memory_mb: 128
        tags: ["repository", "stats", "python"]

      - name: "analyze_rust_project"
        description: "Generate repository statistics for Rust test project"
        input:
          project_path: "test-projects/rust-test-project"
          include_hidden: false
          file_patterns: ["*.rs", "*.toml"]
          include_complexity: true
        expected:
          error: false
          fields:
            - path: "$.result.total_files"
              field_type: "integer"
              required: true
            - path: "$.result.languages_detected"
              field_type: "array"
              required: true
        performance:
          max_duration_ms: 3000
          max_memory_mb: 96
        tags: ["repository", "stats", "rust"]

      - name: "analyze_java_project"
        description: "Generate repository statistics for Java test project"
        input:
          project_path: "test-projects/java-test-project"
          include_hidden: false
          file_patterns: ["*.java"]
          include_complexity: true
        expected:
          error: false
          fields:
            - path: "$.result.total_files"
              field_type: "integer"
              required: true
            - path: "$.result.languages_detected"
              field_type: "array"
              required: true
        performance:
          max_duration_ms: 4000
          max_memory_mb: 112
        tags: ["repository", "stats", "java"]

      - name: "analyze_javascript_project"
        description: "Generate repository statistics for JavaScript test project"
        input:
          project_path: "test-projects/js-dependency-test-project"
          include_hidden: false
          file_patterns: ["*.js", "*.jsx", "*.ts", "*.json"]
          include_complexity: true
        expected:
          error: false
          fields:
            - path: "$.result.total_files"
              field_type: "integer"
              required: true
            - path: "$.result.languages_detected"
              field_type: "array"
              required: true
        performance:
          max_duration_ms: 3500
          max_memory_mb: 100
        tags: ["repository", "stats", "javascript"]

      - name: "handle_nonexistent_project"
        description: "Handle non-existent project paths gracefully"
        input:
          project_path: "test-projects/nonexistent"
          include_hidden: false
        expected:
          error: true
          error_message_contains: "not found"
          fields:
            - path: "$.error.code"
              field_type: "string"
              required: true
        tags: ["repository", "stats", "error"]

  # ========================================================================
  # TRACE_PATH Tool - Path tracing between code symbols
  # ========================================================================
  - name: "trace_path"
    description: "Find execution paths between code symbols"
    tests:
      - name: "trace_python_function_path"
        description: "Find path between two Python functions"
        input:
          project_path: "test-projects/python-sample"
          start_symbol: "main"
          end_symbol: "get_user"
          symbol_type: "function"
          language: "python"
          max_depth: 5
        expected:
          error: false
          fields:
            - path: "$.result.path_found"
              field_type: "boolean"
              required: true
            - path: "$.result.path_steps"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 3000
          max_memory_mb: 64
        tags: ["trace", "path", "python", "function"]

      - name: "trace_rust_struct_dependency"
        description: "Trace dependencies between Rust structs"
        input:
          project_path: "test-projects/rust-test-project"
          start_symbol: "Config"
          end_symbol: "DatabaseConnection"
          symbol_type: "struct"
          language: "rust"
          max_depth: 4
        expected:
          error: false
          fields:
            - path: "$.result.path_found"
              field_type: "boolean"
              required: true
        performance:
          max_duration_ms: 2500
          max_memory_mb: 56
        tags: ["trace", "path", "rust", "struct"]

      - name: "trace_java_class_inheritance"
        description: "Trace inheritance paths between Java classes"
        input:
          project_path: "test-projects/java-test-project"
          start_symbol: "UserService"
          end_symbol: "BaseService"
          symbol_type: "class"
          language: "java"
          include_inheritance: true
          max_depth: 3
        expected:
          error: false
          fields:
            - path: "$.result.inheritance_chain"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 2000
          max_memory_mb: 48
        tags: ["trace", "path", "java", "inheritance"]

      - name: "trace_disconnected_symbols"
        description: "Handle symbols with no connection"
        input:
          project_path: "test-projects/python-sample"
          start_symbol: "isolated_function"
          end_symbol: "unrelated_function"
          symbol_type: "function"
          language: "python"
          max_depth: 5
        expected:
          error: false
          fields:
            - path: "$.result.path_found"
              value: false
              required: true
        tags: ["trace", "path", "edge_case"]

  # ========================================================================
  # EXPLAIN_SYMBOL Tool - Detailed symbol explanations
  # ========================================================================
  - name: "explain_symbol"
    description: "Provide detailed explanations of code symbols"
    tests:
      - name: "explain_python_function"
        description: "Explain a Python function with signature and documentation"
        input:
          project_path: "test-projects/python-sample"
          target_symbol: "get_user"
          symbol_type: "function"
          language: "python"
          include_signature: true
          include_docstring: true
          include_usage_examples: true
        expected:
          error: false
          fields:
            - path: "$.result.symbol_name"
              field_type: "string"
              required: true
            - path: "$.result.symbol_type"
              field_type: "string"
              required: true
            - path: "$.result.signature"
              field_type: "string"
              required: true
            - path: "$.result.documentation"
              field_type: "string"
              required: false
        performance:
          max_duration_ms: 2000
          max_memory_mb: 32
        tags: ["explain", "python", "function"]

      - name: "explain_rust_struct"
        description: "Explain a Rust struct with fields and traits"
        input:
          project_path: "test-projects/rust-test-project"
          target_symbol: "DatabaseConnection"
          symbol_type: "struct"
          language: "rust"
          include_signature: true
          include_fields: true
          include_traits: true
        expected:
          error: false
          fields:
            - path: "$.result.symbol_name"
              field_type: "string"
              required: true
            - path: "$.result.fields"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 1500
          max_memory_mb: 28
        tags: ["explain", "rust", "struct"]

      - name: "explain_java_class"
        description: "Explain a Java class with methods and inheritance"
        input:
          project_path: "test-projects/java-test-project"
          target_symbol: "UserController"
          symbol_type: "class"
          language: "java"
          include_signature: true
          include_methods: true
          include_inheritance: true
        expected:
          error: false
          fields:
            - path: "$.result.symbol_name"
              field_type: "string"
              required: true
            - path: "$.result.methods"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 2500
          max_memory_mb: 40
        tags: ["explain", "java", "class"]

      - name: "explain_nonexistent_symbol"
        description: "Handle non-existent symbols gracefully"
        input:
          project_path: "test-projects/python-sample"
          target_symbol: "nonexistent_function"
          symbol_type: "function"
          language: "python"
        expected:
          error: true
          error_message_contains: "not found"
          fields:
            - path: "$.error.code"
              field_type: "string"
              required: true
        tags: ["explain", "error", "edge_case"]

  # ========================================================================
  # FIND_DEPENDENCIES Tool - Dependency analysis
  # ========================================================================
  - name: "find_dependencies"
    description: "Find and analyze code dependencies"
    tests:
      - name: "find_python_class_dependencies"
        description: "Find dependencies for a Python class"
        input:
          project_path: "test-projects/python-sample"
          target_symbol: "User"
          symbol_type: "class"
          language: "python"
          include_imports: true
          include_inheritance: true
          max_depth: 3
        expected:
          error: false
          fields:
            - path: "$.result.dependencies"
              field_type: "array"
              required: true
            - path: "$.result.import_dependencies"
              field_type: "array"
              required: false
            - path: "$.result.internal_dependencies"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 4000
          max_memory_mb: 72
        tags: ["dependencies", "python", "class"]

      - name: "find_rust_module_dependencies"
        description: "Find dependencies for a Rust module"
        input:
          project_path: "test-projects/rust-test-project"
          target_symbol: "database"
          symbol_type: "module"
          language: "rust"
          include_imports: true
          include_transitive: true
          max_depth: 4
        expected:
          error: false
          fields:
            - path: "$.result.dependencies"
              field_type: "array"
              required: true
            - path: "$.result.crate_dependencies"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 3500
          max_memory_mb: 68
        tags: ["dependencies", "rust", "module"]

      - name: "find_java_package_dependencies"
        description: "Find dependencies for a Java package"
        input:
          project_path: "test-projects/java-test-project"
          target_symbol: "com.example.service"
          symbol_type: "package"
          language: "java"
          include_imports: true
          include_transitive: false
          max_depth: 2
        expected:
          error: false
          fields:
            - path: "$.result.dependencies"
              field_type: "array"
              required: true
        performance:
          max_duration_ms: 3000
          max_memory_mb: 64
        tags: ["dependencies", "java", "package"]

      - name: "find_transitive_dependencies"
        description: "Find transitive dependencies with depth control"
        input:
          project_path: "test-projects/dependency-test-project"
          target_symbol: "UserManager"
          symbol_type: "class"
          language: "python"
          include_transitive: true
          max_depth: 4
          include_imports: true
        expected:
          error: false
          fields:
            - path: "$.result.dependency_graph"
              field_type: "object"
              required: false
            - path: "$.result.depth_levels"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 5000
          max_memory_mb: 96
        tags: ["dependencies", "transitive", "graph"]

  # ========================================================================
  # FIND_REFERENCES Tool - Reference finding
  # ========================================================================
  - name: "find_references"
    description: "Find all references to code symbols"
    tests:
      - name: "find_python_function_references"
        description: "Find all references to a Python function"
        input:
          project_path: "test-projects/python-sample"
          target_symbol: "get_user"
          symbol_type: "function"
          language: "python"
          include_calls: true
          include_imports: true
        expected:
          error: false
          fields:
            - path: "$.result.references"
              field_type: "array"
              required: true
            - path: "$.result.reference_count"
              field_type: "integer"
              required: true
        performance:
          max_duration_ms: 2000
          max_memory_mb: 48
        tags: ["references", "python", "function"]

      - name: "find_rust_struct_references"
        description: "Find all references to a Rust struct"
        input:
          project_path: "test-projects/rust-test-project"
          target_symbol: "Config"
          symbol_type: "struct"
          language: "rust"
          include_instantiation: true
          include_inheritance: false
        expected:
          error: false
          fields:
            - path: "$.result.references"
              field_type: "array"
              required: true
        performance:
          max_duration_ms: 1800
          max_memory_mb: 44
        tags: ["references", "rust", "struct"]

      - name: "find_java_class_references"
        description: "Find all references to a Java class"
        input:
          project_path: "test-projects/java-test-project"
          target_symbol: "User"
          symbol_type: "class"
          language: "java"
          include_instantiation: true
          include_inheritance: true
          include_imports: true
        expected:
          error: false
          fields:
            - path: "$.result.references"
              field_type: "array"
              required: true
            - path: "$.result.inheritance_references"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 2200
          max_memory_mb: 52
        tags: ["references", "java", "class"]

      - name: "find_unused_symbol_references"
        description: "Handle symbols with no references"
        input:
          project_path: "test-projects/python-sample"
          target_symbol: "unused_function"
          symbol_type: "function"
          language: "python"
          include_calls: true
        expected:
          error: false
          fields:
            - path: "$.result.references"
              value: []
              required: true
            - path: "$.result.reference_count"
              value: 0
              required: true
        tags: ["references", "unused", "edge_case"]

      - name: "find_cross_file_references"
        description: "Find references across multiple files"
        input:
          project_path: "test-projects/dependency-test-project"
          target_symbol: "BaseModel"
          symbol_type: "class"
          language: "python"
          include_calls: true
          include_imports: true
          include_inheritance: true
          cross_file_search: true
        expected:
          error: false
          fields:
            - path: "$.result.references"
              field_type: "array"
              required: true
            - path: "$.result.files_with_references"
              field_type: "array"
              required: false
        performance:
          max_duration_ms: 3500
          max_memory_mb: 80
        tags: ["references", "cross_file", "comprehensive"]

# Test configuration
test_config:
  timeout_seconds: 60
  max_concurrency: 3
  fail_fast: false
  retry:
    max_retries: 2
    retry_delay_ms: 1000
    exponential_backoff: true

# Metadata for core navigation testing
metadata:
  author: "CodePrism MCP Test Harness Team"
  documentation: "https://spec.modelcontextprotocol.io/"
  license: "MIT"
  tags: ["core", "navigation", "analysis", "multi-language"]
  test_coverage:
    tools: 5
    scenarios: 25
    languages: ["python", "rust", "java", "javascript"]
    capabilities: ["repository_analysis", "path_tracing", "symbol_explanation", "dependency_analysis", "reference_finding"]
  
  # Performance benchmarks for core tools
  benchmarks:
    repository_stats_time_ms: 5000
    trace_path_time_ms: 3000
    explain_symbol_time_ms: 2000
    find_dependencies_time_ms: 4000
    find_references_time_ms: 2500
  
  # Quality targets
  quality_targets:
    success_rate_percent: 95
    error_handling_coverage_percent: 100
    cross_language_support_percent: 90
    performance_test_coverage_percent: 100 