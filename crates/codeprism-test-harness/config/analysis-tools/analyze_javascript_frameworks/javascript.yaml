# JavaScript Framework Analysis Tool - JavaScript Test Configuration
# Tests framework-specific analysis for React, Node.js, and modern JS patterns

global:
  max_global_concurrency: 2
  timeout_seconds: 30
  fail_fast: false
  default_project_path: "test-projects/js-dependency-test-project"

# Performance monitoring for JS framework analysis
performance:
  enable_monitoring: true
  baseline_storage_path: "baselines/analysis-tools/"
  regression_detection:
    warning_threshold_percent: 25.0
    error_threshold_percent: 60.0

test_suites:
  - name: "JavaScript Framework Analysis - Core Functionality"
    description: "Test framework detection and pattern analysis"
    test_cases:
      # Framework detection
      - id: "js_framework_detection"
        tool_name: "analyze_javascript_frameworks"
        description: "Detect JavaScript frameworks and versions"
        enabled: true
        project_path: "test-projects/js-dependency-test-project"
        input_params:
          detect_frameworks: true
          detect_versions: true
          analyze_dependencies: true
          frameworks: ["react", "vue", "angular", "express", "next"]
        expected:
          patterns:
            - key: "result.detected_frameworks"
              validation:
                type: "array"
              required: true
            - key: "result.framework_versions"
              validation:
                type: "exists"
              required: false
            - key: "result.confidence_scores"
              validation:
                type: "exists"
              required: false
          performance_requirements:
            max_execution_time_ms: 4000
            max_memory_usage_mb: 64

      # React component analysis
      - id: "js_react_components"
        tool_name: "analyze_javascript_frameworks"
        description: "Analyze React components and patterns"
        enabled: true
        project_path: "test-projects/js-dependency-test-project"
        input_params:
          framework_focus: "react"
          analyze_components: true
          analyze_hooks: true
          analyze_props: true
          detect_anti_patterns: true
        expected:
          patterns:
            - key: "result.react_components"
              validation:
                type: "array"
              required: true
            - key: "result.hooks_usage"
              validation:
                type: "exists"
              required: false
            - key: "result.anti_patterns"
              validation:
                type: "array"
              required: false

      # Node.js backend analysis
      - id: "js_nodejs_patterns"
        tool_name: "analyze_javascript_frameworks"
        description: "Analyze Node.js backend patterns and APIs"
        enabled: true
        project_path: "test-projects/js-dependency-test-project"
        input_params:
          framework_focus: "nodejs"
          analyze_apis: true
          analyze_middleware: true
          analyze_async_patterns: true
          detect_security_issues: true
        expected:
          patterns:
            - key: "result.api_endpoints"
              validation:
                type: "array"
              required: true
            - key: "result.middleware_usage"
              validation:
                type: "exists"
              required: false
            - key: "result.async_patterns"
              validation:
                type: "array"
              required: false

      # Package.json analysis
      - id: "js_package_analysis"
        tool_name: "analyze_javascript_frameworks"
        description: "Analyze package.json and dependencies"
        enabled: true
        project_path: "test-projects/js-dependency-test-project"
        input_params:
          analyze_package_json: true
          analyze_dependencies: true
          check_outdated: true
          security_audit: true
        expected:
          patterns:
            - key: "result.package_info"
              validation:
                type: "exists"
              required: true
            - key: "result.dependency_analysis"
              validation:
                type: "exists"
              required: true
            - key: "result.security_vulnerabilities"
              validation:
                type: "array"
              required: false

  - name: "JavaScript Framework Analysis - Edge Cases"
    description: "Test edge cases and error handling"
    test_cases:
      # Mixed framework project
      - id: "js_mixed_frameworks"
        tool_name: "analyze_javascript_frameworks"
        description: "Handle projects with multiple frameworks"
        enabled: true
        project_path: "test-projects/js-dependency-test-project"
        input_params:
          detect_frameworks: true
          allow_multiple: true
          confidence_threshold: 0.6
        expected:
          patterns:
            - key: "result.detected_frameworks"
              validation:
                type: "array"
              required: true

      # No framework project
      - id: "js_vanilla_javascript"
        tool_name: "analyze_javascript_frameworks"
        description: "Handle vanilla JavaScript projects"
        enabled: true
        project_path: "test-projects/js-dependency-test-project"
        input_params:
          detect_frameworks: true
          include_vanilla: true
        expected:
          patterns:
            - key: "result.detected_frameworks"
              validation:
                type: "array"
              required: true

# Performance baselines
baselines:
  js_framework_detection:
    average_execution_time_ms: 2000.0
    peak_memory_mb: 48.0
    throughput_ops_per_sec: 0.5
  js_react_components:
    average_execution_time_ms: 3000.0
    peak_memory_mb: 56.0
    throughput_ops_per_sec: 0.33
  js_nodejs_patterns:
    average_execution_time_ms: 2500.0
    peak_memory_mb: 52.0
    throughput_ops_per_sec: 0.4
  js_package_analysis:
    average_execution_time_ms: 1500.0
    peak_memory_mb: 40.0
    throughput_ops_per_sec: 0.67
