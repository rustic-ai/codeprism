# Find Duplicates Tool - Python Test Configuration
# Tests the find_duplicates MCP tool for detecting duplicate code blocks

global:
  max_global_concurrency: 2
  timeout_seconds: 30
  fail_fast: false
  default_project_path: "test-projects/python-sample"

# Performance monitoring for duplicate detection
performance:
  enable_monitoring: true
  baseline_storage_path: "baselines/analysis-tools/"
  regression_detection:
    warning_threshold_percent: 30.0
    error_threshold_percent: 70.0

test_suites:
  - name: "Find Duplicates - Python Core Functionality"
    description: "Test duplicate code detection with similarity scoring"
    test_cases:
      # Basic duplicate detection
      - id: "python_duplicates_basic"
        tool_name: "find_duplicates"
        description: "Basic duplicate code detection in Python project"
        enabled: true
        project_path: "test-projects/python-sample"
        input_params:
          similarity_threshold: 0.8
          min_lines: 5
          include_functions: true
          include_classes: true
          ignore_whitespace: true
          ignore_comments: true
        expected:
          patterns:
            - key: "result.duplicate_groups"
              validation:
                type: "array"
              required: true
            - key: "result.similarity_scores"
              validation:
                type: "exists"
              required: false
            - key: "result.total_duplicates"
              validation:
                type: "range"
                min: 0
                max: 100
              required: true
          performance_requirements:
            max_execution_time_ms: 5000
            max_memory_usage_mb: 80

      # Function-level duplicate detection
      - id: "python_duplicates_functions"
        tool_name: "find_duplicates"
        description: "Detect duplicate functions and methods"
        enabled: true
        project_path: "test-projects/python-sample"
        input_params:
          analysis_scope: "functions"
          similarity_threshold: 0.7
          min_lines: 3
          semantic_analysis: true
          ignore_variable_names: true
        expected:
          patterns:
            - key: "result.duplicate_functions"
              validation:
                type: "array"
              required: true

      # Cross-file duplicate detection
      - id: "python_duplicates_cross_file"
        tool_name: "find_duplicates"
        description: "Detect duplicates across multiple files"
        enabled: true
        project_path: "test-projects/dependency-test-project"
        input_params:
          analysis_scope: "cross-file"
          similarity_threshold: 0.75
          min_lines: 4
          include_imports: false
          group_by_similarity: true
        expected:
          patterns:
            - key: "result.cross_file_duplicates"
              validation:
                type: "array"
              required: true
            - key: "result.affected_files"
              validation:
                type: "array"
              required: true

# Performance baselines
baselines:
  python_duplicates_basic:
    average_execution_time_ms: 3000.0
    peak_memory_mb: 64.0
    throughput_ops_per_sec: 0.33
  python_duplicates_functions:
    average_execution_time_ms: 2000.0
    peak_memory_mb: 48.0
    throughput_ops_per_sec: 0.5
  python_duplicates_cross_file:
    average_execution_time_ms: 4000.0
    peak_memory_mb: 80.0
    throughput_ops_per_sec: 0.25
