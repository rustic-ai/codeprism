"""
Mock FastAPI package for testing dependency filtering.
"""

from typing import Any, Callable, Dict, Optional


class FastAPI:
    """Mock FastAPI application class."""
    
    def __init__(self, title: str = "FastAPI", version: str = "0.1.0", **kwargs):
        self.title = title
        self.version = version
        self.routes = []
    
    def get(self, path: str):
        """Mock GET route decorator."""
        def decorator(func: Callable):
            self.routes.append(("GET", path, func))
            return func
        return decorator
    
    def post(self, path: str):
        """Mock POST route decorator."""
        def decorator(func: Callable):
            self.routes.append(("POST", path, func))
            return func
        return decorator


class HTTPException(Exception):
    """Mock HTTP exception."""
    
    def __init__(self, status_code: int, detail: str = ""):
        self.status_code = status_code
        self.detail = detail
        super().__init__(detail)


class Depends:
    """Mock dependency injection."""
    
    def __init__(self, dependency: Callable):
        self.dependency = dependency 